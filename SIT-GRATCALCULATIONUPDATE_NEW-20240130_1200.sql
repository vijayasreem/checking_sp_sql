create or replace PROCEDURE GRATCALCULATIONUPDATE_NEW
(   QUOT_OR_POLICY_IN NUMBER,
	QUOT_OR_POLICY_VAR_IN VARCHAR2,
	RATE_VAR_IN VARCHAR2 DEFAULT NULL,
    RATE_IN VARCHAR2  DEFAULT NULL		
) 
IS
MEMBERID NUMBER;
PVOSUM NUMBER	:=0;
SCSUM NUMBER	:=0;
PSBD NUMBER := 0;
PSBW NUMBER := 0;
PSBR NUMBER := 0;
CAC NUMBER := 0;
CMVC NUMBER := 0;
CSBD NUMBER := 0;
CSBW NUMBER := 0;
CSBR NUMBER := 0;
CURRENTGRATCALCULATION_ID NUMBER := 1;

CURSOR proc_cursor(QUOT_OR_POLICY_IN IN NUMBER) IS 
	SELECT g.MEMBER_ID,PVOSUM,SCSUM,PSBD, PSBW, PSBR, CMVC, CSBD, CSBW, CSBR,g.GRATCALCULATION_ID  FROM  GRATCALCULATION g   
			 INNER JOIN (SELECT SUM(PVO_MORTALITY) + SUM(PVO_DISABILITY) + SUM(PVO_WITHDRAWAL) + SUM(PVO_NR) AS PVOSUM,SUM(SC_MORTALITY) + SUM(SC_DISABILITY)+SUM(SC_WITHDRAWAL)+SUM(SC_NR) AS SCSUM ,p.MEMBER_ID,p.QUOTATION_ID 		
		FROM PVOSCCALCULATION p WHERE  ISACTIVE =1  GROUP  BY p.MEMBER_ID,p.QUOTATION_ID) A ON A.MEMBER_ID =g.MEMBER_ID 
		INNER JOIN ( SELECT SUM(PS_BENEFIT_DEATH) AS PSBD,  SUM(PS_BENEFIT_WDL) AS PSBW, SUM(PS_BENEFIT_RET) AS PSBR, SUM(MVC) AS CMVC, SUM(CS_BENEFIT_DEATH) AS CSBD, SUM(CS_BENEFIT_WDL) AS CSBW, SUM(CS_BENEFIT_RET) AS CSBR,GRATCALCULATION_ID, MEMBER_ID	
		FROM GRATTERMCALCULATION g2 WHERE g2.ISACTIVE =1 GROUP BY GRATCALCULATION_ID, MEMBER_ID) B ON  B.GRATCALCULATION_ID = g.GRATCALCULATION_ID  AND B.MEMBER_ID = g.MEMBER_ID 
	        WHERE A.QUOTATION_ID = QUOT_OR_POLICY_IN AND g.IS_ACTIVE =1 ORDER BY g.MEMBER_ID ;

CURSOR proc_policy_cursor(QUOT_OR_POLICY_IN IN NUMBER) IS 
  SELECT g.MEMBER_ID,PVOSUM,SCSUM,PSBD, PSBW, PSBR, CMVC, CSBD, CSBW, CSBR,g.GRATCALCULATION_ID  FROM  GRATCALCULATION g   
			 INNER JOIN (SELECT SUM(PVO_MORTALITY) + SUM(PVO_DISABILITY) + SUM(PVO_WITHDRAWAL) + SUM(PVO_NR) AS PVOSUM,SUM(SC_MORTALITY) + SUM(SC_DISABILITY)+SUM(SC_WITHDRAWAL)+SUM(SC_NR) AS SCSUM ,p.MEMBER_ID,p.TMP_POLICY_ID 		
		FROM PVOSCCALCULATIONRWL p WHERE  ISACTIVE =1  GROUP  BY p.MEMBER_ID,p.TMP_POLICY_ID) A ON A.MEMBER_ID =g.MEMBER_ID 
		INNER JOIN ( SELECT SUM(PS_BENEFIT_DEATH) AS PSBD,  SUM(PS_BENEFIT_WDL) AS PSBW, SUM(PS_BENEFIT_RET) AS PSBR, SUM(MVC) AS CMVC, SUM(CS_BENEFIT_DEATH) AS CSBD, SUM(CS_BENEFIT_WDL) AS CSBW, SUM(CS_BENEFIT_RET) AS CSBR,GRATCALCULATION_ID, MEMBER_ID	
		FROM GRATTERMCALCULATION g2 WHERE g2.ISACTIVE =1 GROUP BY GRATCALCULATION_ID, MEMBER_ID) B ON  B.GRATCALCULATION_ID = g.GRATCALCULATION_ID  AND B.MEMBER_ID = g.MEMBER_ID 
	        WHERE A.TMP_POLICY_ID = QUOT_OR_POLICY_IN AND g.IS_ACTIVE =1 ORDER BY g.MEMBER_ID;			
BEGIN

IF QUOT_OR_POLICY_VAR_IN = 'QUOTATION' THEN
	OPEN proc_cursor(QUOT_OR_POLICY_IN);
  	FETCH proc_cursor INTO MEMBERID,PVOSUM,SCSUM,PSBD, PSBW, PSBR, CMVC, CSBD, CSBW, CSBR,CURRENTGRATCALCULATION_ID;
  	WHILE proc_cursor%FOUND LOOP
  		/*SELECT SUM(PS_BENEFIT_DEATH),  SUM(PS_BENEFIT_WDL), SUM(PS_BENEFIT_RET), SUM(MVC), SUM(CS_BENEFIT_DEATH), SUM(CS_BENEFIT_WDL), SUM(CS_BENEFIT_RET)
		INTO PSBD, PSBW, PSBR, CMVC, CSBD, CSBW, CSBR
		FROM GRATTERMCALCULATION WHERE GRATCALCULATION_ID = CURRENTGRATCALCULATION_ID AND MEMBER_ID = MEMBERID
		GROUP BY GRATCALCULATION_ID, MEMBER_ID;*/
		-- TO UPDATE THE AGGREGATE VALUES FOR THE PRIMARY TABLE
		UPDATE GRATCALCULATION
			SET  MVC = CMVC, 
				CURRENT_SERVICE_BENEFIT_DEATH = CSBD, 
				CURRENT_SERVICE_BENEFIT_WDL = CSBW, 
				CURRENT_SERVICE_BENEFIT_RET = CSBR, 
				PAST_SERVICE_BENEFIT_DEATH = PSBD,
				PAST_SERVICE_BENEFIT_WDL = PSBW, 
				PAST_SERVICE_BENEFIT_RET = PSBR,
				PAST_SERVICE_BENEFIT = ROUND(PSBD + PSBW + PSBR),
				CURRENT_SERVICE_BENEFIT = ROUND(CSBD + CSBW + CSBR),
				PVO_SUM = PVOSUM,
				SC_SUM = SCSUM,
				MODIFIED_DATE =CURRENT_TIMESTAMP
		WHERE GRATCALCULATION_ID = CURRENTGRATCALCULATION_ID AND MEMBER_ID = MEMBERID;
  	FETCH proc_cursor INTO MEMBERID,PVOSUM,SCSUM,PSBD, PSBW, PSBR, CMVC, CSBD, CSBW, CSBR,CURRENTGRATCALCULATION_ID;
  	END LOOP;

  	CLOSE proc_cursor;  
  	DELETE  FROM PVOSCCALCULATION  WHERE QUOTATION_ID = QUOT_OR_POLICY_IN;
    commit;
ELSIF QUOT_OR_POLICY_VAR_IN = 'POLICY' THEN
 	OPEN proc_policy_cursor(QUOT_OR_POLICY_IN);
  	FETCH proc_policy_cursor INTO MEMBERID,PVOSUM,SCSUM,PSBD, PSBW, PSBR, CMVC, CSBD, CSBW, CSBR,CURRENTGRATCALCULATION_ID;
  	WHILE proc_policy_cursor%FOUND LOOP
  		/*SELECT SUM(PS_BENEFIT_DEATH),  SUM(PS_BENEFIT_WDL), SUM(PS_BENEFIT_RET), SUM(MVC), SUM(CS_BENEFIT_DEATH), SUM(CS_BENEFIT_WDL), SUM(CS_BENEFIT_RET)
		INTO PSBD, PSBW, PSBR, CMVC, CSBD, CSBW, CSBR
		FROM GRATTERMCALCULATION WHERE GRATCALCULATION_ID = CURRENTGRATCALCULATION_ID AND MEMBER_ID = MEMBERID
		GROUP BY GRATCALCULATION_ID, MEMBER_ID;*/

		-- TO UPDATE THE AGGREGATE VALUES FOR THE PRIMARY TABLE
		UPDATE GRATCALCULATION
			SET  MVC = CMVC, 
				CURRENT_SERVICE_BENEFIT_DEATH = CSBD, 
				CURRENT_SERVICE_BENEFIT_WDL = CSBW, 
				CURRENT_SERVICE_BENEFIT_RET = CSBR, 
				PAST_SERVICE_BENEFIT_DEATH = PSBD,
				PAST_SERVICE_BENEFIT_WDL = PSBW, 
				PAST_SERVICE_BENEFIT_RET = PSBR,
				PAST_SERVICE_BENEFIT = ROUND(PSBD + PSBW + PSBR),
				CURRENT_SERVICE_BENEFIT = ROUND(CSBD + CSBW + CSBR),
				PVO_SUM = PVOSUM,
				SC_SUM = SCSUM,
				MODIFIED_DATE =CURRENT_TIMESTAMP
		WHERE GRATCALCULATION_ID = CURRENTGRATCALCULATION_ID AND MEMBER_ID = MEMBERID;
  	FETCH proc_policy_cursor INTO MEMBERID,PVOSUM,SCSUM,PSBD, PSBW, PSBR, CMVC, CSBD, CSBW, CSBR,CURRENTGRATCALCULATION_ID;
  	END LOOP;
  	CLOSE proc_policy_cursor;  
  	DELETE  FROM PVOSCCALCULATIONRWL  WHERE TMP_POLICY_ID = QUOT_OR_POLICY_IN;
    commit;
   DBMS_OUTPUT.PUT_LINE('COMPLETED');
END IF;
END GRATCALCULATIONUPDATE_NEW;